version: '3.8'

services:
  dev:
    container_name: nestjs_api
    image: nestjs-api:1.0.0
    environment:
      - NODE_ENV:${NODE_ENV}
    build:
      context: .
      args:
        - NODE_ENV="${NODE_ENV}"
      dockerfile: ./Dockerfile
    entrypoint: ["npm", "run", "start:debug"]
    env_file:
      - .env
    ports:
      - 8000:8000
    networks:
      - nesjs-network
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    restart: unless-stopped


  postgres:
    container_name: postgres
    image: postgres:alpine
    ports:
      - "5432:5432"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    restart: always
    environment:
      - DB_USER=${POSTGRES_USER}
      - DB_PASS=${POSTGRES_PASSWORD}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/
      - rabbitmq_log:/var/log/rabbitmq/
    networks:
      - rabbitmq_go_net

volumes:
  rabbitmq_data:
  rabbitmq_log:

networks:
  nesjs-network:

  rabbitmq_go_net:
    driver: bridge
